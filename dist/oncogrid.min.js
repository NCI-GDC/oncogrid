"use strict";var oncogrid=function(t,e){return function(e){var n=this;return n.donors=e.donors||[],n.genes=e.genes||[],n.observations=e.observations||[],n.element=e.element||"body",n.heatMap=e.heatMap||!0,n.colorMap=e.colorMap||{missense_variant:"#ff825a",frameshift_variant:"#57dba4",stop_gained:"#af57db",start_lost:"#af57db",stop_lost:"#ffe",initiator_codon_variant:"#af57db"},n.width=e.width,n.height=e.height,n.mutationScore=function(t,e){for(var r=0;r<n.observations.length;r++){var o=n.observations[r];if(o.donorId===t&&o.gene===e)return 1}return 0},n.mutationGeneScore=function(t,e){for(var r=0,o=0;o<n.observations.length;o++){var a=n.observations[o];a.gene===e&&a.gene===e&&r++}return r},n.computeScores=function(){for(var t=0;t<n.donors.length;t++){var e=n.donors[t];e.score=0;for(var r=0;r<n.genes.length;r++){var o=n.genes[r];e.score+=n.mutationScore(e.donorId,o.id)*Math.pow(2,n.genes.length+1-r)}}},n.computeGeneScores=function(){for(var t=0;t<n.genes.length;t++){var e=n.genes[t];e.score=0;for(var r=0;r<n.donors.length;r++){var o=n.donors[r];e.score+=n.mutationGeneScore(o.donorId,e.id)}}},n.sortScore=function(t,e){return t.score<e.score?1:t.score>e.score?-1:0},n.sortByScores=function(){n.donors.sort(n.sortScore)},n.genesSortbyScores=function(){n.genes.sort(n.sortScore)},n.getDonorIndex=function(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(r.donorId===e)return n}return-1},n.init=function(){n.div=t.select("body").append("div").attr("class","tooltip-oncogrid").style("opacity",0),n.margin={top:10,right:15,bottom:15,left:80},n.numDonors=n.donors.length,n.numGenes=n.genes.length,n.cellWidth=n.width/n.donors.length,n.cellHeight=n.height/n.genes.length,n.x=t.scale.ordinal().domain(t.range(n.numDonors)).rangeBands([0,n.width]),n.y=t.scale.ordinal().domain(t.range(n.numGenes)).rangeBands([0,n.height]),n.svg=t.select(n.element).append("svg").attr("width",n.width+n.margin.left+n.margin.right).attr("height",n.height+n.margin.top+n.margin.bottom).style("margin-left",n.margin.left+"px").append("g").attr("transform","translate("+n.margin.left+","+n.margin.top+")"),n.svg.append("rect").attr("class","background").attr("width",n.width).attr("height",n.height),n.row=n.svg.selectAll(".row").data(n.genes).enter().append("g").attr("class","row").attr("transform",function(t,e){return"translate(0,"+n.y(e)+")"}),n.row.append("line").attr("x2",n.width),n.column=n.svg.selectAll(".column").data(n.donors).enter().append("g").attr("class","column").attr("donor",function(t){return t.donorId}).attr("transform",function(t,e){return"translate("+n.x(e)+")rotate(-90)"}),n.column.append("line").attr("x1",-n.width),n.computeGeneScores(),n.computeScores(),n.sortByScores()},n.renderFirst=function(){n.row.append("text").attr("class","gene-label label-text-font").transition().attr("x",-6).attr("y",n.cellHeight/2).attr("dy",".32em").attr("text-anchor","end").text(function(t,e){return n.genes[e].symbol}),n.defineRowDragBehaviour(),n.svg.selectAll("svg").data(n.observations).enter().append("rect").on("mouseover",function(e){n.div.transition().duration(200).style("opacity",.9),n.div.html(e.donorId+"<br/>"+e.gene+"<br/>"+e.id).style("left",t.event.pageX+10+"px").style("top",t.event.pageY-28+"px")}).on("mouseout",function(){n.div.transition().duration(500).style("opacity",0)}).on("click",function(t){window.location="/mutations/"+t.id}).transition().attr("class",function(t){return"sortable-rect "+t.donorId+"-cell "+t.gene+"-cell"}).attr("cons",function(t){return t.consequence}).attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))}).attr("y",function(t){return n.getY(t)}).attr("width",n.cellWidth).attr("height",function(t){return n.getHeight(t)}).attr("fill",function(t){return n.getColor(t)}).attr("opacity",function(t){return n.getOpacity(t)}).attr("stroke-width",2),n.renderAgeHistogram()},n.renderAgeHistogram=function(){(void 0===n.topSVG||null===n.topSVG)&&(n.topSVG=t.select("#oncogrid-topcharts").append("svg").attr("width",n.width+n.margin.left+n.margin.right).attr("height",100).style("margin-left",n.margin.left+"px").append("g").attr("transform","translate("+n.margin.left+","+n.margin.top+")")),n.topSVG.selectAll("rect").data(n.donors).enter().append("rect").on("mouseover",function(e){n.div.transition().duration(200).style("opacity",.9),n.div.html("Donor: "+e.donorId+"<br/> Age:"+e.age+"<br/>").style("left",t.event.pageX+10+"px").style("top",t.event.pageY-28+"px")}).on("mouseout",function(){n.div.transition().duration(500).style("opacity",0)}).transition().attr("class",function(t){return"sortable-bar "+t.donorId+"-bar"}).attr("width",n.cellWidth-2).attr("height",function(t){return t.age}).attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))+1}).attr("y",function(t){return 100-t.age}).attr("fill","#1693C0")},n.defineRowDragBehaviour=function(){var e=t.behavior.drag();e.on("dragstart",function(){t.event.sourceEvent.stopPropagation()}),e.on("drag",function(e){var r=t.event.dy,o=n.genes.indexOf(e),a=t.select(this);a.attr("transform",function(){var e=t.transform(t.select(this).attr("transform"));return"translate( 0, "+(parseInt(e.translate[1])+r)+")"});var s=t.transform(t.select(this).attr("transform")).translate[1];t.selectAll(".row").each(function(e){var a,i,l=n.genes.indexOf(e);r>0&&l>o?(i=t.transform(t.select(this).attr("transform")).translate[1],s>i&&(a=n.genes[o],n.genes[o]=n.genes[l],n.genes[l]=a)):0>r&&o>l&&(i=t.transform(t.select(this).attr("transform")).translate[1],i>s&&(a=n.genes[o],n.genes[o]=n.genes[l],n.genes[l]=a))})}),e.on("dragend",function(){n.computeScores(),n.sortByScores(),n.render()});var r=t.selectAll(".row").call(e);r.on("click",function(){t.event.defaultPrevented})},n.cluster=function(){n.computeGeneScores(),n.genesSortbyScores(),n.computeScores(),n.sortByScores(),n.render()},n.render=function(){t.selectAll(".row").transition().attr("transform",function(t){return"translate( 0, "+n.y(n.genes.indexOf(t))+")"}),t.selectAll(".sortable-rect").transition().attr("y",function(t){return n.getY(t)}).attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))}),n.topSVG.selectAll("rect").transition().attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))+1})},n.getY=function(t){var e=n.genes.map(function(t){return t.id});if(n.heatMap===!0)return n.y(e.indexOf(t.gene));var r=Object.keys(n.colorMap);return n.y(e.indexOf(t.gene))+n.cellHeight/r.length*(r.indexOf(t.consequence)-1)},n.getColor=function(t){return n.heatMap===!0?"#D33682":n.colorMap[t.consequence]},n.getOpacity=function(){return n.heatMap===!0?.3:1},n.getHeight=function(){return n.heatMap===!0?n.cellHeight:n.cellHeight/Object.keys(n.colorMap).length},n.toggleHeatmap=function(){n.heatMap===!0?n.heatMap=!1:n.heatMap=!0,t.selectAll(".sortable-rect").transition().attr("y",function(t){return n.getY(t)}).attr("height",function(t){return n.getHeight(t)}).attr("fill",function(t){return n.getColor(t)}).attr("opacity",function(t){return n.getOpacity(t)})},n.removeDonors=function(e){for(var r=[],o=0;o<n.donors.length;o++){var a=n.donors[o];e(a)&&(r.push(a.donorId),t.selectAll("."+a.donorId+"-cell").remove(),t.selectAll("."+a.donorId+"-bar").remove(),n.donors.splice(o,1),o--)}for(var s=0;s<n.observations.length;s++){var i=n.observations[s];n.donors.indexOf(i.donorId)>=0&&(n.observations.splice(s,1),s--)}n.x=t.scale.ordinal().domain(t.range(n.donors.length)).rangeBands([0,n.width]),n.cellWidth=n.width/n.donors.length,n.column.remove(),n.column=n.svg.selectAll(".column").data(n.donors).enter().append("g").attr("class","column").attr("donor",function(t){return t.donorId}).attr("transform",function(t,e){return"translate("+n.x(e)+")rotate(-90)"}),n.column.append("line").attr("x1",-n.width),t.selectAll(".sortable-rect").transition().attr("width",n.cellWidth).attr("y",function(t){return n.getY(t)}).attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))}),t.selectAll(".sortable-bar").transition().attr("width",n.cellWidth-2).attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))+1})},n.removeGenes=function(e){for(var r=[],o=0;o<n.genes.length;o++){var a=n.genes[o];e(a)&&(r.push(a.id),t.selectAll("."+a.id+"-cell").remove(),n.genes.splice(o,1),o--)}n.y=t.scale.ordinal().domain(t.range(n.genes.length)).rangeBands([0,n.height]),n.cellHeight=n.height/n.genes.length,n.row.remove(),n.row=n.svg.selectAll(".row").data(n.genes).enter().append("g").attr("class","row").attr("transform",function(t,e){return"translate(0,"+n.y(e)+")"}),n.row.append("line").attr("x2",n.width),n.row.append("text").attr("class","gene-label label-text-font").transition().attr("x",-6).attr("y",n.cellHeight/2).attr("dy",".32em").attr("text-anchor","end").text(function(t,e){return n.genes[e].symbol}),n.defineRowDragBehaviour(),t.selectAll(".sortable-rect").transition().attr("height",function(t){return n.getHeight(t)}).attr("y",function(t){return n.getY(t)}).attr("x",function(t){return n.x(n.getDonorIndex(n.donors,t.donorId))})},n.sortDonors=function(t){n.donors.sort(t),n.render()},n.destroy=function(){t.selectAll("svg").remove(),t.select("#oncogrid-topcharts").select("svg").remove(),delete n.svg,delete n.topSVG},n}}(d3,oncogrid||{});